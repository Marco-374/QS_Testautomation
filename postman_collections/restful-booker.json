{
	"info": {
		"_postman_id": "0f602742-5c1c-4e84-bb15-bbe3c29e9f42",
		"name": "Restful-Booker",
		"description": "# Welcome to Restful-Booker!\n\n***Can you find all the bugs in this API?***\n\nWelcome to Restful-booker an API that you can use to learn more about API Testing or try out API testing tools against. Restful-booker is a **C**reate **R**ead **U**pdate **D**elete Web API that comes with authentication features and loaded with a bunch of bugs for you to explore.\n\n## Where is the API?\n\nYou can find the code for Restful-booker on GitHub here: [https://github.com/mwinteringham/restful-booker](https://github.com/mwinteringham/restful-booker)\n\nYou can find a deployed instance at [https://restful-booker.herokuapp.com/](https://restful-booker.herokuapp.com/)\n\nThe API comes pre-loaded with 10 records for you to work with **and resets itself every 10 minutes back to that default state.** It also comes with [detailed API documentation](https://restful-booker.herokuapp.com/apidoc/index.html) to help get you started with your API testing straight away.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "/ping - HealthCheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "84101e73-eca2-4e88-b25c-7d2b97e1d97e",
						"exec": [
							"pm.test(\"Ping is successful\", function () {\r",
							"    pm.response.to.be.success;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2a5d3cd1-de4c-473d-9800-276c869868ab",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{host}}/ping",
				"description": "A simple GET request that informs us whether the API is up and running."
			},
			"response": []
		},
		{
			"name": "/booking - GetBookingIds (Query all IDs)",
			"id": "c5d78c4d-ecaa-4014-8f75-05f4d1842b3f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{host}}/booking",
				"description": "Requests the IDs for all existing bookings that exist within the API"
			},
			"response": []
		},
		{
			"name": "/booking - GetBookingIds (Filter by name)",
			"id": "b9dc92d0-3bfc-4113-bac7-57ad5f75c22a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/booking?firstname={{$randomFirstName}}&lastname={{$randomLastName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "{{$randomFirstName}}"
						},
						{
							"key": "lastname",
							"value": "{{$randomLastName}}"
						}
					]
				},
				"description": "Requests all Booking IDs that match the firstname AND lastname provided in the query string. You can also query by firstname or lastname alone."
			},
			"response": []
		},
		{
			"name": "/booking - GetBookingIds (Filter by date)",
			"id": "e24f6a3f-5022-4754-9c23-5d44ac9e6629",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/booking?checkin=2022-01-01&checkout=2022-01-31",
					"host": [
						"{{host}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "checkin",
							"value": "2022-01-01"
						},
						{
							"key": "checkout",
							"value": "2022-01-31"
						}
					]
				},
				"description": "Requests all Booking IDs that are within the checkin AND checkout provided in the query string. You can also query by checking or checkout alone."
			},
			"response": []
		},
		{
			"name": "/booking/:id - GetBooking",
			"id": "5666caf6-9e57-465a-bb4e-11311c3cab60",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{host}}/booking/1",
				"description": "Requests a specific booking that exists within the API. To get a list of valid booking IDs using GetBookingIds calls."
			},
			"response": []
		},
		{
			"name": "/booking - CreateBooking (JSON)",
			"id": "4752668a-2685-44d2-820f-6b5d2fb0304b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2022-01-01\",\n        \"checkout\" : \"2022-01-10\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
				},
				"url": "{{host}}/booking",
				"description": "Request that allows you to create a Booking within the API. This request creates the booking using JSON."
			},
			"response": []
		},
		{
			"name": "/booking - CreateBooking (XML)",
			"id": "3bd52893-19ff-4053-9a31-616e5f4c9d72",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml"
					},
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<booking>\n    <firstname>Jim</firstname>\n    <lastname>Brown</lastname>\n    <totalprice>111</totalprice>\n    <depositpaid>true</depositpaid>\n    <bookingdates>\n      <checkin>2018-01-01</checkin>\n      <checkout>2019-01-01</checkout>\n    </bookingdates>\n    <additionalneeds>Breakfast</additionalneeds>\n  </booking>"
				},
				"url": "{{host}}/booking",
				"description": "Request that allows you to create a Booking within the API. This request creates the booking using XML."
			},
			"response": []
		},
		{
			"name": "/booking - CreateBooking (URL)",
			"id": "38c72576-e166-40a0-aa47-e47f6aee25a7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "firstname",
							"value": "Jim",
							"type": "text"
						},
						{
							"key": "lastname",
							"value": "Brown",
							"type": "text"
						},
						{
							"key": "totalprice",
							"value": "111",
							"type": "text"
						},
						{
							"key": "depositpaid",
							"value": "true",
							"type": "text"
						},
						{
							"key": "bookingdates[checkin]",
							"value": "2018-01-01",
							"type": "text"
						},
						{
							"key": "bookingdates[checkout]",
							"value": "2018-01-02",
							"type": "text"
						}
					]
				},
				"url": "{{host}}/booking",
				"description": "Request that allows you to create a Booking within the API. This request creates the booking using urlencoded."
			},
			"response": []
		},
		{
			"name": "/auth - CreateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c95eb4d-be9e-4ea0-b656-ecefa07ab78b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains token\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"token\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f0937860-1da1-47d6-b8f7-0274a070dc83",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}"
				},
				"url": "{{host}}/auth",
				"description": "Sending a request to this endpoint will generate a token that can be used in the Cookie header for PUT /booking/{id} and DELETE /booking/{id}"
			},
			"response": []
		},
		{
			"name": "/booking/:id - UpdateBooking (JSON)",
			"id": "f403693e-5396-4191-946b-4f753107da07",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "",
						"username": ""
					}
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=abc123",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"James\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
				},
				"url": "{{host}}/booking/1",
				"description": "Request that allows you to update a complete Booking within the API. This request updates the booking using JSON.\n\n**Authorisation**\n\nThis request requires you to be authorised. Which can be done in one of two ways:\n\n1.  **Basic Auth -** Create a basic authorization header using Basic Auth with the credentials admin/password123\n2.  **Cookie based -** Create a cookie header with the value `token=abc123`. To get a valid token, send a request to `POST /auth`"
			},
			"response": []
		},
		{
			"name": "/booking/:id - UpdateBooking (XML)",
			"id": "4ed909f1-3859-45c3-97ce-26543104cb93",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "",
						"username": ""
					}
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					},
					{
						"key": "Cookie",
						"value": "token=abc123",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<booking>\n    <firstname>James</firstname>\n    <lastname>Brown</lastname>\n    <totalprice>111</totalprice>\n    <depositpaid>true</depositpaid>\n    <bookingdates>\n      <checkin>2018-01-01</checkin>\n      <checkout>2019-01-01</checkout>\n    </bookingdates>\n    <additionalneeds>Breakfast</additionalneeds>\n  </booking>"
				},
				"url": "{{host}}/booking/1",
				"description": "Request that allows you to update a complete Booking within the API. This request updates the booking using XML.\n\n**Authorisation**\n\nThis request requires you to be authorised. Which can be done in one of two ways:\n\n1.  **Basic Auth -** Create a basic authorization header using Basic Auth with the credentials admin/password123\n2.  **Cookie based -** Create a cookie header with the value `token=abc123`. To get a valid token, send a request to `POST /auth`"
			},
			"response": []
		},
		{
			"name": "/booking/:id - UpdateBooking (URL)",
			"id": "84c6e9a9-6be1-4bb7-94af-dd63acd991c0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "",
						"username": ""
					}
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Cookie",
						"value": "token=abc123",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "firstname",
							"value": "Jim",
							"type": "text"
						},
						{
							"key": "lastname",
							"value": "Brown",
							"type": "text"
						},
						{
							"key": "totalprice",
							"value": "111",
							"type": "text"
						},
						{
							"key": "depositpaid",
							"value": "true",
							"type": "text"
						},
						{
							"key": "bookingdates[checkin]",
							"value": "2018-01-01",
							"type": "text"
						},
						{
							"key": "bookingdates[checkout]",
							"value": "2018-01-02",
							"type": "text"
						}
					]
				},
				"url": "{{host}}/booking/1",
				"description": "Request that allows you to update a complete Booking within the API. This request updates the booking using URL.\n\n**Authorisation**\n\nThis request requires you to be authorised. Which can be done in one of two ways:\n\n1.  **Basic Auth -** Create a basic authorization header using Basic Auth with the credentials admin/password123\n2.  **Cookie based -** Create a cookie header with the value `token=abc123`. To get a valid token, send a request to `POST /auth`"
			},
			"response": []
		},
		{
			"name": "/booking/:id - PartialUpdateBooking (JSON)",
			"id": "ee3aa7fb-31c0-4551-8fac-ed5a29e73522",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "",
						"username": ""
					}
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=abc123",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"James\",\n    \"lastname\" : \"Brown\"\n}"
				},
				"url": "{{host}}/booking/1",
				"description": "Request that allows you to update a partial section of a Booking within the API. This request updates the booking using JSON.\n\n**Authorisation**\n\nThis request requires you to be authorised. Which can be done in one of two ways:\n\n1.  **Basic Auth -** Create a basic authorization header using Basic Auth with the credentials admin/password123\n2.  **Cookie based -** Create a cookie header with the value `token=abc123`. To get a valid token, send a request to `POST /auth`"
			},
			"response": []
		},
		{
			"name": "/booking/:id - PartialUpdateBooking (XML)",
			"id": "5fc5762d-9a85-4429-88ec-101fce99aaae",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "",
						"username": ""
					}
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					},
					{
						"key": "Cookie",
						"value": "token=abc123",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<booking>\n    <firstname>James</firstname>\n    <lastname>Brown</lastname>\n  </booking>"
				},
				"url": "{{host}}/booking/1",
				"description": "Request that allows you to update a partial section of a Booking within the API. This request updates the booking using XML.\n\n**Authorisation**\n\nThis request requires you to be authorised. Which can be done in one of two ways:\n\n1.  **Basic Auth -** Create a basic authorization header using Basic Auth with the credentials admin/password123\n2.  **Cookie based -** Create a cookie header with the value `token=abc123`. To get a valid token, send a request to `POST /auth`"
			},
			"response": []
		},
		{
			"name": "/booking/:id - PartialUpdateBooking (URL)",
			"id": "534c6e05-0ffc-4afc-a1fd-69075d9e33b3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "",
						"username": ""
					}
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Cookie",
						"value": "token=abc123",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "firstname",
							"value": "Jim",
							"type": "text"
						},
						{
							"key": "lastname",
							"value": "Brown",
							"type": "text"
						}
					]
				},
				"url": "{{host}}/booking/1",
				"description": "Request that allows you to update a partial section of a Booking within the API. This request updates the booking using URL.\n\n**Authorisation**\n\nThis request requires you to be authorised. Which can be done in one of two ways:\n\n1.  **Basic Auth -** Create a basic authorization header using Basic Auth with the credentials admin/password123\n2.  **Cookie based -** Create a cookie header with the value `token=abc123`. To get a valid token, send a request to `POST /auth`"
			},
			"response": []
		},
		{
			"name": "/booking/:id - DeleteBooking",
			"id": "5f39fd47-b68f-48fc-95a0-48ad47817f90",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token=abc123"
					}
				],
				"url": "{{host}}/booking/1",
				"description": "Request that allows you to delete a Booking within the API.\n\n**Authorisation**\n\nThis request requires you to be authorised. Which can be done in one of two ways:\n\n1.  **Basic Auth -** Create a basic authorization header using Basic Auth with the credentials admin/password123\n2.  **Cookie based -** Create a cookie header with the value `token=abc123`. To get a valid token, send a request to `POST /auth`"
			},
			"response": []
		}
	],
	"variable": [
		{
			"id": "71294d88-47c3-4f17-91b6-ca599b2db56d",
			"key": "host",
			"value": "https://restful-booker.herokuapp.com"
		}
	]
}